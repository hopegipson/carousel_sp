{"version":3,"sources":["js/quotecarousel.js"],"names":[],"mappingsfile":"quotecarousel.0a25d21f.js","sourceRoot":"../src","sourcesContent":["// const $quotemenu = document.querySelector(\".quotemenu\");\n// const $quoteitems = document.querySelectorAll(\".quotemenu--item\");\n// const $quoterotator = document.querySelector(\".quote-rotator-holder\");\n\n// let quotemenuWidth = $quotemenu.clientWidth;\n// let quoteitemWidth = $quoteitems[0].clientWidth;\n// let quotewrapWidth = $quoteitems.length * quoteitemWidth;\n// let scrollSpeed = 0;\n// let oldScrollY = 0;\n// let scrollY = 0;\n// let y = 0;\n// /*--------------------\n// Lerp\n// --------------------*/\n// const lerp = (v0, v1, t) => {\n//   return v0 * (1 - t) + v1 * t;\n// };\n// /*--------------------\n// Dispose\n// --------------------*/\n// const dispose = (scroll) => {\n//   gsap.set($quoteitems, {\n//     x: (i) => {\n//       return i * quoteitemWidth + scroll;\n//     },\n//     modifiers: {\n//       x: (x, target) => {\n//         const s = gsap.utils.wrap(\n//           -quoteitemWidth,\n//           quotewrapWidth - quoteitemWidth,\n//           parseInt(x)\n//         );\n//         return `${s}px`;\n//       },\n//     },\n//   });\n// };\n// dispose(0);\n// /*--------------------\n// Wheel\n// --------------------*/\n// const handleMouseWheel = (e) => {\n//   scrollY -= e.deltaY * 0.9;\n// };\n// /*--------------------\n// Touch\n// --------------------*/\n// let touchStart = 0;\n// let touchX = 0;\n// let isDragging = false;\n// const handleTouchStart = (e) => {\n//   touchStart = e.clientX || e.touches[0].clientX;\n//   isDragging = true;\n// };\n// const handleTouchMove = (e) => {\n//   if (!isDragging) return;\n//   touchX = e.clientX || e.touches[0].clientX;\n//   scrollY += (touchX - touchStart) * 2.5;\n//   touchStart = touchX;\n// };\n// const handleTouchEnd = () => {\n//   isDragging = false;\n// };\n// /*--------------------\n// Listeners\n// --------------------*/\n// $quotemenu.addEventListener(\"mousewheel\", handleMouseWheel);\n// $quotemenu.addEventListener(\"touchstart\", handleTouchStart);\n// $quotemenu.addEventListener(\"touchmove\", handleTouchMove);\n// $quotemenu.addEventListener(\"touchend\", handleTouchEnd);\n// $quotemenu.addEventListener(\"mousedown\", handleTouchStart);\n// $quotemenu.addEventListener(\"mousemove\", handleTouchMove);\n// $quotemenu.addEventListener(\"mouseleave\", handleTouchEnd);\n// $quotemenu.addEventListener(\"mouseup\", handleTouchEnd);\n// $quotemenu.addEventListener(\"selectstart\", () => {\n//   return false;\n// });\n// /*--------------------\n// Resize\n// --------------------*/\n// window.addEventListener(\"resize\", () => {\n//   quotemenuWidth = $quotemenu.clientWidth;\n//   quoteitemWidth = $quoteitems[0].clientWidth;\n//   quotewrapWidth = $quoteitems.length * quoteitemWidth;\n// });\n// /*--------------------\n// Render\n// --------------------*/\n// const render = () => {\n//   requestAnimationFrame(render);\n//   y = lerp(y, scrollY, 0.1);\n//   dispose(y);\n//   scrollSpeed = y - oldScrollY;\n//   oldScrollY = y;\n//   gsap.to($quoteitems, {\n//     //skewX: -scrollSpeed * .2,\n//     // rotate: scrollSpeed * .01,\n//     scale: 1 - Math.min(100, Math.abs(scrollSpeed)) * 0.003,\n//   });\n// };\n// render();\n"]}